//------------------------------------------------------------------------------
// <wsdl2code-generated>
// This code was generated by http://www.wsdl2code.com iPhone version 2.1
// Date Of Creation: 6/8/2017 7:27:15 PM
//
//  Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code Version
//

#import "EnterpriseUser.h" 


@implementation EnterpriseUser

-(id)initWithArray:(NSArray*)array {
    self = [super init];
    if (self) {
        @try {
            for (int i0 = 0; i0 < [array count]; i0++)
            {
                if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"Autorized"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setAutorized:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"AutorizedSpecified"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setAutorizedSpecified:[nodeContentValue boolValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"FirstName"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setFirstName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"LastName"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setLastName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"EnterpriseIdList"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setEnterpriseIdList:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"AccessLevels"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setAccessLevels:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"Email"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setEmail:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"HostName"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setHostName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserLogin"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUserLogin:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserPassword"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUserPassword:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserCompanyName"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUserCompanyName:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserNodeIds"]==NSOrderedSame)){
                    NSString* nodeContentValue = [[NSString alloc] initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    if (nodeContentValue !=nil)
                        [self setUserNodeIds:nodeContentValue];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserId"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setUserId:[nodeContentValue intValue]];
                }
                else if ( ([[array objectAtIndex:i0] objectForKey:@"nodeContent"] !=nil) &&  ([[[array objectAtIndex:i0]objectForKey:@"nodeName"]caseInsensitiveCompare:@"UserIdSpecified"]==NSOrderedSame)){
                    NSString *nodeContentValue = [[NSString alloc]initWithString:[[array objectAtIndex:i0] objectForKey:@"nodeContent"]];
                    [self setUserIdSpecified:[nodeContentValue boolValue]];
                }
            }
        }
        @catch(NSException *ex){
        }
    }
    return self;
}
-(NSString*)toString:(BOOL)addNameWrap {
    NSMutableString *nsString = [NSMutableString string];
    if (addNameWrap == YES)
        [nsString appendString:@"<EnterpriseUser>" ];
    [nsString appendFormat:@"<Autorized>%d</Autorized>" , [self autorized]];
    [nsString appendFormat:@"<AutorizedSpecified>%d</AutorizedSpecified>" , [self autorizedSpecified]];
    if (self.firstName != nil) {
        [nsString appendFormat:@"<FirstName>%@</FirstName>" , [self firstName]];
    }
    if (self.lastName != nil) {
        [nsString appendFormat:@"<LastName>%@</LastName>" , [self lastName]];
    }
    if (self.enterpriseIdList != nil) {
        [nsString appendFormat:@"<EnterpriseIdList>%@</EnterpriseIdList>" , [self enterpriseIdList]];
    }
    if (self.accessLevels != nil) {
        [nsString appendFormat:@"<AccessLevels>%@</AccessLevels>" , [self accessLevels]];
    }
    if (self.email != nil) {
        [nsString appendFormat:@"<Email>%@</Email>" , [self email]];
    }
    if (self.hostName != nil) {
        [nsString appendFormat:@"<HostName>%@</HostName>" , [self hostName]];
    }
    if (self.userLogin != nil) {
        [nsString appendFormat:@"<UserLogin>%@</UserLogin>" , [self userLogin]];
    }
    if (self.userPassword != nil) {
        [nsString appendFormat:@"<UserPassword>%@</UserPassword>" , [self userPassword]];
    }
    if (self.userCompanyName != nil) {
        [nsString appendFormat:@"<UserCompanyName>%@</UserCompanyName>" , [self userCompanyName]];
    }
    if (self.userNodeIds != nil) {
        [nsString appendFormat:@"<UserNodeIds>%@</UserNodeIds>" , [self userNodeIds]];
    }
    [nsString appendFormat:@"<UserId>%d</UserId>" , [self userId]];
    [nsString appendFormat:@"<UserIdSpecified>%d</UserIdSpecified>" , [self userIdSpecified]];
    if (addNameWrap == YES)
        [nsString appendString:@"</EnterpriseUser>" ];
    return nsString;
}
#pragma mark - NSCoding
-(id)initWithCoder:(NSCoder *)decoder{
    self = [super init];
    if (self){
        self.autorized = [decoder decodeInt32ForKey:@"autorized"];
        self.autorizedSpecified = [decoder decodeInt32ForKey:@"autorizedSpecified"];
        self.firstName = [decoder decodeObjectForKey:@"firstName"];
        self.lastName = [decoder decodeObjectForKey:@"lastName"];
        self.enterpriseIdList = [decoder decodeObjectForKey:@"enterpriseIdList"];
        self.accessLevels = [decoder decodeObjectForKey:@"accessLevels"];
        self.email = [decoder decodeObjectForKey:@"email"];
        self.hostName = [decoder decodeObjectForKey:@"hostName"];
        self.userLogin = [decoder decodeObjectForKey:@"userLogin"];
        self.userPassword = [decoder decodeObjectForKey:@"userPassword"];
        self.userCompanyName = [decoder decodeObjectForKey:@"userCompanyName"];
        self.userNodeIds = [decoder decodeObjectForKey:@"userNodeIds"];
        self.userId = [decoder decodeInt32ForKey:@"userId"];
        self.userIdSpecified = [decoder decodeInt32ForKey:@"userIdSpecified"];
    }
    return self;
}
-(void)encodeWithCoder:(NSCoder *)encoder{
    [encoder encodeInt32:self.autorized forKey:@"autorized"];
    [encoder encodeInt32:self.autorizedSpecified forKey:@"autorizedSpecified"];
    [encoder encodeObject:self.firstName forKey:@"firstName"];
    [encoder encodeObject:self.lastName forKey:@"lastName"];
    [encoder encodeObject:self.enterpriseIdList forKey:@"enterpriseIdList"];
    [encoder encodeObject:self.accessLevels forKey:@"accessLevels"];
    [encoder encodeObject:self.email forKey:@"email"];
    [encoder encodeObject:self.hostName forKey:@"hostName"];
    [encoder encodeObject:self.userLogin forKey:@"userLogin"];
    [encoder encodeObject:self.userPassword forKey:@"userPassword"];
    [encoder encodeObject:self.userCompanyName forKey:@"userCompanyName"];
    [encoder encodeObject:self.userNodeIds forKey:@"userNodeIds"];
    [encoder encodeInt32:self.userId forKey:@"userId"];
    [encoder encodeInt32:self.userIdSpecified forKey:@"userIdSpecified"];
}
-(id)copyWithZone:(NSZone *)zone {
    EnterpriseUser *finalCopy = [[[self class] allocWithZone: zone] init];
    
    finalCopy.autorized = self.autorized;
    
    finalCopy.autorizedSpecified = self.autorizedSpecified;
    
    NSString *copy3 = [self.firstName copy];
    finalCopy.firstName = copy3;
    
    NSString *copy4 = [self.lastName copy];
    finalCopy.lastName = copy4;
    
    NSString *copy5 = [self.enterpriseIdList copy];
    finalCopy.enterpriseIdList = copy5;
    
    NSString *copy6 = [self.accessLevels copy];
    finalCopy.accessLevels = copy6;
    
    NSString *copy7 = [self.email copy];
    finalCopy.email = copy7;
    
    NSString *copy8 = [self.hostName copy];
    finalCopy.hostName = copy8;
    
    NSString *copy9 = [self.userLogin copy];
    finalCopy.userLogin = copy9;
    
    NSString *copy10 = [self.userPassword copy];
    finalCopy.userPassword = copy10;
    
    NSString *copy11 = [self.userCompanyName copy];
    finalCopy.userCompanyName = copy11;
    
    NSString *copy12 = [self.userNodeIds copy];
    finalCopy.userNodeIds = copy12;
    
    finalCopy.userId = self.userId;
    
    finalCopy.userIdSpecified = self.userIdSpecified;
    
    return finalCopy;
}

@end
